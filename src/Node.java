/*	Linked List Node ADT	Author: J.R. Dermoudy	Date: September 2013	This file holds the Linked List Node ADT which	represents the nodes in a linked-list.  Linked-list	nodes consist of a "data" field and a reference to	the next node in the linked-list, "next".*/public class Node implements NodeInterface{	private Object data;	// the item value stored in the node	private Node next;		// a reference to the next node	public Node(Object o)	/*		Constructor method.		Pre-condition: none		Post-condition: the Node object holds the parameter value						(o) within its "data" field and its "next"						field is null		Informally: intialises the instance variables of the newly					created Node object to hold the given parameter					and to terminate the "next" field	*/	{		data=o;		next=null;	}	public void setData(Object o)	/*		Set method for "data" instance variable.		Pre-condition: none		Post-condition: the Node object's data field is altered to						hold the given (o) value		Informally: assign the value of the parameter to the Node					object's "data" instance variable	*/	{		data=o;	}	public void setNext(Node n)	/*		Set method for "next" instance variable.		Pre-condition: the given parameter value holds a defined (valid)					   address		Post-condition: the Node object's next field is altered to						hold the given (n) value		Informally: assign the value of the parameter to the Node					object's "next" instance variable	*/	{		next=n;	}	public Object getData()	/*		Get method for "data" instance variable.		Pre-condition: none		Post-condition: the Node object's data field is returned		Informally: examine the Node object's "data" instance					variable returning its value	*/	{		return data;	}	public Node getNext()	/*		Get method for "next" instance variable.		Pre-condition: none		Post-condition: the Node object's next field is returned		Informally: examine the Node object's "next" instance					variable returning its value	*/	{		return next;	}}